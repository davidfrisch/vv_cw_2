{"is_extracted": true, "number_of_code_blocks": 1, "extra_information_num_words": 1, "response": "```\n/**\n ***************************************************************************\n * Description:\n *\n * Given n non-negative integers a1, a2, ..., an, where each represents a \n * point at coordinate (i, ai). n vertical lines are drawn such that the \n * two endpoints of line i is at (i, ai) and (i, 0). Find two lines, which \n * together with x-axis forms a container, such that the container contains \n * the most water. \n * \n * Note: You may not slant the container.\n * \n ***************************************************************************\n * @tag : Two Pointers\n * {@link https://leetcode.com/problems/container-with-most-water/ }\n */\npackage _011_ContainerWithMostWater;\n\n/** see test {@link _011_ContainerWithMostWater.PracticeTest } */\npublic class Practice {\n\n    public int maxArea(int[] height) {\n        int maxArea = 0;\n        int left = 0;\n        int right = height.length - 1;\n        while (left < right) {\n            int h = Math.min(height[left], height[right]);\n            maxArea = Math.max(maxArea, h * (right - left));\n            if (height[left] < height[right]) {\n                left++;\n            } else {\n                right--;\n            }\n        }\n        return maxArea;\n    }\n\n}\n```"}