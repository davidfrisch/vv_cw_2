{"is_extracted": false, "number_of_code_blocks": 0, "extra_information_num_words": null, "response": "/**\n *******************************************************************************\n * Description: \n * Given a string containing just the characters '(', ')', '{', '}', '[' and ']',\n * determine if the input string is valid. \n * The brackets must close in the correct order, \"()\" and \"()[]{}\" are all \n * valid but \"(]\" and \"([)]\" are not.\n *\n *******************************************************************************\n * @tag : Stack; String\n * {@link https://leetcode.com/problems/valid-parentheses/ }\n */\npackage _020_ValidParentheses;\n\nimport java.util.Stack;\n\n/** see test {@link _020_ValidParentheses.PracticeTest } */\npublic class Practice {\n\n    public boolean isValid(String s) {\n        Stack<Character> stack = new Stack<>();\n        for(char c : s.toCharArray()){\n            if(c == '(' || c == '{' || c == '['){\n                stack.push(c);\n            }else if(stack.isEmpty() \n                        || (c == ')' && stack.pop() != '(') \n                        || (c == '}' && stack.pop() != '{') \n                        || (c == ']' && stack.pop() != '[')){\n                return false;\n            }\n        }\n        return stack.isEmpty();\n    }\n\n}\n"}