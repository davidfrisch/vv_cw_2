/**
 *******************************************************************************
 * Description: 
 * Given a string containing just the characters '(', ')', '{', '}', '[' and ']',
 * determine if the input string is valid. 
 * The brackets must close in the correct order, "()" and "()[]{}" are all 
 * valid but "(]" and "([)]" are not.
 *
 *******************************************************************************
 * @tag : Stack; String
 * {@link https://leetcode.com/problems/valid-parentheses/ }
 */
package _020_ValidParentheses;

import java.util.Stack;

/** see test {@link _020_ValidParentheses.PracticeTest } */
public class Practice {

    public boolean isValid(String s) {
        Stack<Character> stack = new Stack<>();
        for(char c : s.toCharArray()){
            if(c == '(' || c == '{' || c == '['){
                stack.push(c);
            }else if(stack.isEmpty() 
                        || (c == ')' && stack.pop() != '(') 
                        || (c == '}' && stack.pop() != '{') 
                        || (c == ']' && stack.pop() != '[')){
                return false;
            }
        }
        return stack.isEmpty();
    }

}
