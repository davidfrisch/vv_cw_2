The following code has the following error: Message: junit.framework.AssertionFailedError
@Test
    public void Test1() {
        int n = 2;
        int[] nums = {1, 2, 3, 4, 5};
        ListNode head = ListNode.constructLinkedList(nums);
        ListNode actual = solution.removeNthFromEnd(head, n);
        // 1->2->3->5
        int[] exps = {1, 2, 3, 5};
        ListNode expect = ListNode.constructLinkedList(exps);
        assertTrue(ListNode.isSameList(actual, expect));
    }

Message: junit.framework.AssertionFailedError
@Test
    public void Test2() {
        int n = 5;
        int[] nums = {1, 2, 3, 4, 5};
        ListNode head = ListNode.constructLinkedList(nums);
        ListNode actual = solution.removeNthFromEnd(head, n);
        // 2->3->4->5
        int[] exps = {2, 3, 4, 5};
        ListNode expect = ListNode.constructLinkedList(exps);
        assertTrue(ListNode.isSameList(actual, expect));
    }

Message: junit.framework.AssertionFailedError
@Test
    public void Test3() {
        int n = 1;
        int[] nums = {1, 2, 3, 4, 5};
        ListNode head = ListNode.constructLinkedList(nums);
        ListNode actual = solution.removeNthFromEnd(head, n);
        int[] exps = {1, 2, 3, 4};
        ListNode expect = ListNode.constructLinkedList(exps);
        assertTrue(ListNode.isSameList(actual, expect));
    }



. Retry with a fix of the complete file. Don't explain! Only give the java code

/**
 *************************************************************************
 * Description: 
 * 
 * Given a linked list, remove the nth node from the end of list and return 
 * its head. 
 * 
 * For example, 
 * Given linked list: 1->2->3->4->5, and n = 2. 
 * After removing the second node from the end, the linked list 
 * becomes 1->2->3->5. 
 * 
 * Note: 
 * Given n will always be valid. Try to do this in one pass.
 * 
 *************************************************************************
 * @tag : Linked List; Two Pointers
 * {@link https://leetcode.com/problems/remove-nth-node-from-end-of-list/ }
 */
package _019_RemoveNthNodeFromEndOfList;

import com.leetcode.ListNode;

/** see test {@link _019_RemoveNthNodeFromEndOfList.PracticeTest } */
public class Practice {

    public ListNode removeNthFromEnd(ListNode head, int n) {
        // Implement the logic to remove the nth node from the end of the list
        return null;
    }

}
