{"is_extracted": true, "number_of_code_blocks": 1, "extra_information_num_words": 1, "response": "```\nclass Solution {\n    public List<List<Integer>> fourSum(int[] nums, int target) {\n        List<List<Integer>> result = new ArrayList<>();\n\n        if (nums == null || nums.length < 4) {\n            return result;\n        }\n\n        Arrays.sort(nums);\n\n        for (int i = 0; i < nums.length - 3; i++) {\n            if (i > 0 && nums[i] == nums[i - 1]) {\n                continue; // avoid duplicates\n            }\n\n            for (int j = i + 1; j < nums.length - 2; j++) {\n                if (j > i + 1 && nums[j] == nums[j - 1]) {\n                    continue; // avoid duplicates\n                }\n\n                int left = j + 1;\n                int right = nums.length - 1;\n\n                while (left < right) {\n                    int sum = nums[i] + nums[j] + nums[left] + nums[right];\n\n                    if (sum == target) {\n                        result.add(Arrays.asList(nums[i], nums[j], nums[left], nums[right]));\n\n                        while (left < right && nums[left] == nums[left + 1]) {\n                            left++;\n                        }\n\n                        while (left < right && nums[right] == nums[right - 1]) {\n                            right--;\n                        }\n\n                        left++;\n                        right--;\n                    } else if (sum < target) {\n                        left++;\n                    } else {\n                        right--;\n                    }\n                }\n            }\n        }\n\n        return result;\n    }\n}\n```"}