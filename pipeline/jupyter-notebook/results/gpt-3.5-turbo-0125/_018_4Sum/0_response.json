{"is_extracted": false, "number_of_code_blocks": 0, "extra_information_num_words": null, "response": "/**\n *************************************************************************\n * Description: \n * Given an array S of n integers, are there elements a, b, c, and d in S \n * such that a + b + c + d = target? Find all unique quadruplets in the \n * array which gives the sum of target. \n * \n * Note: \n * Elements in a quadruplet (a,b,c,d) must be in non-descending order. \n * (ie, a \u2264 b \u2264 c \u2264 d) \n * The solution set must not contain duplicate quadruplets. \n * For example, given array S = {1 0 -1 0 -2 2}, and target = 0. \n * A solution set is: (-1,  0, 0, 1) (-2, -1, 1, 2) (-2,  0, 0, 2)\n * \n *************************************************************************\n * @tag : Array; Hash Table; Two Pointers;\n * {@link https://leetcode.com/problems/4sum/ }\n */\npackage _018_4Sum;\n\nimport java.util.List;\n\n/** see test {@link _018_4Sum.PracticeTest } */\npublic class Practice {\n\n    public List<List<Integer>> fourSum(int[] nums, int target) {\n        // Your solution code goes here\n        return null;\n    }\n\n}\n"}