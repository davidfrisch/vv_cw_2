The following code has the following error: 
clean:
   [delete] Deleting directory /app/leetcode-master/bin
   [delete] Deleting directory /app/leetcode-master/report

init:
    [mkdir] Created dir: /app/leetcode-master/bin
    [mkdir] Created dir: /app/leetcode-master/report

compile.specific:
    Compiling 13 source files to /app/leetcode-master/bin
    /app/leetcode-master/src/_018_4Sum/Practice.java:2: error: class, interface, or enum expected
        public List<List<Integer>> fourSum(int[] nums, int target) {
               ^
    /app/leetcode-master/src/_018_4Sum/Practice.java:5: error: class, interface, or enum expected
            if (nums == null || nums.length < 4) {
            ^
    /app/leetcode-master/src/_018_4Sum/Practice.java:7: error: class, interface, or enum expected
            }
            ^
    /app/leetcode-master/src/_018_4Sum/Practice.java:11: error: class, interface, or enum expected
            for (int i = 0; i < nums.length - 3; i++) {
            ^
    /app/leetcode-master/src/_018_4Sum/Practice.java:11: error: class, interface, or enum expected
            for (int i = 0; i < nums.length - 3; i++) {
                            ^
    /app/leetcode-master/src/_018_4Sum/Practice.java:11: error: class, interface, or enum expected
            for (int i = 0; i < nums.length - 3; i++) {
                                                 ^
    /app/leetcode-master/src/_018_4Sum/Practice.java:14: error: class, interface, or enum expected
                }
                ^
    /app/leetcode-master/src/_018_4Sum/Practice.java:16: error: class, interface, or enum expected
                for (int j = i + 1; j < nums.length - 2; j++) {
                                    ^
    /app/leetcode-master/src/_018_4Sum/Practice.java:16: error: class, interface, or enum expected
                for (int j = i + 1; j < nums.length - 2; j++) {
                                                         ^
    /app/leetcode-master/src/_018_4Sum/Practice.java:19: error: class, interface, or enum expected
                    }
                    ^
    /app/leetcode-master/src/_018_4Sum/Practice.java:22: error: class, interface, or enum expected
                    int right = nums.length - 1;
                    ^
    /app/leetcode-master/src/_018_4Sum/Practice.java:24: error: class, interface, or enum expected
                    while (left < right) {
                    ^
    /app/leetcode-master/src/_018_4Sum/Practice.java:27: error: class, interface, or enum expected
                        if (sum == target) {
                        ^
    /app/leetcode-master/src/_018_4Sum/Practice.java:30: error: class, interface, or enum expected
                            while (left < right && nums[left] == nums[left + 1]) {
                            ^
    /app/leetcode-master/src/_018_4Sum/Practice.java:32: error: class, interface, or enum expected
                            }
                            ^
    /app/leetcode-master/src/_018_4Sum/Practice.java:36: error: class, interface, or enum expected
                            }
                            ^
    /app/leetcode-master/src/_018_4Sum/Practice.java:39: error: class, interface, or enum expected
                            right--;
                            ^
    /app/leetcode-master/src/_018_4Sum/Practice.java:40: error: class, interface, or enum expected
                        } else if (sum < target) {
                        ^
    /app/leetcode-master/src/_018_4Sum/Practice.java:42: error: class, interface, or enum expected
                        } else {
                        ^
    /app/leetcode-master/src/_018_4Sum/Practice.java:44: error: class, interface, or enum expected
                        }
                        ^
    /app/leetcode-master/src/_018_4Sum/Practice.java:50: error: class, interface, or enum expected
        }
        ^
    21 errors
. Retry with a fix of the complete file. Don't explain! Only give the java code

    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> result = new ArrayList<>();

        if (nums == null || nums.length < 4) {
            return result;
        }

        Arrays.sort(nums);

        for (int i = 0; i < nums.length - 3; i++) {
            if (i > 0 && nums[i] == nums[i - 1]) {
                continue; // avoid duplicates
            }

            for (int j = i + 1; j < nums.length - 2; j++) {
                if (j > i + 1 && nums[j] == nums[j - 1]) {
                    continue; // avoid duplicates
                }

                int left = j + 1;
                int right = nums.length - 1;

                while (left < right) {
                    int sum = nums[i] + nums[j] + nums[left] + nums[right];

                    if (sum == target) {
                        result.add(Arrays.asList(nums[i], nums[j], nums[left], nums[right]));

                        while (left < right && nums[left] == nums[left + 1]) {
                            left++;
                        }

                        while (left < right && nums[right] == nums[right - 1]) {
                            right--;
                        }

                        left++;
                        right--;
                    } else if (sum < target) {
                        left++;
                    } else {
                        right--;
                    }
                }
            }
        }

        return result;
    }
