{"is_extracted": false, "number_of_code_blocks": 0, "extra_information_num_words": null, "response": "/**\n *******************************************************************************\n * Description: \n * \n * Given a roman numeral, convert it to an integer. \n * Input is guaranteed to be within the range from 1 to 3999.\n * \n *******************************************************************************\n * @tag : Math; String\n * {@link https://leetcode.com/problems/roman-to-integer/ }\n */\npackage _013_RomanToInteger;\n\npublic class Practice {\n\n    public int romanToInt(String a) {\n        // Add your solution code here\n        if (a.length() == 0) {\n            return 0;\n        }\n\n        int result = 0;\n        int prevValue = getValue(a.charAt(0));\n\n        for (int i = 1; i < a.length(); i++) {\n            int curValue = getValue(a.charAt(i));\n            if (prevValue < curValue) {\n                result += curValue - prevValue;\n                if (i + 1 < a.length()) {\n                    prevValue = getValue(a.charAt(i + 1));\n                    i++;\n                }\n            } else {\n                result += prevValue;\n                prevValue = curValue;\n            }\n        }\n        result += prevValue;\n        return result;\n    }\n\n    private int getValue(char c) {\n        switch (c) {\n            case 'I':\n                return 1;\n            case 'V':\n                return 5;\n            case 'X':\n                return 10;\n            case 'L':\n                return 50;\n            case 'C':\n                return 100;\n            case 'D':\n                return 500;\n            case 'M':\n                return 1000;\n            default:\n                return 0;\n        }\n    }\n}\n"}