{"is_extracted": false, "number_of_code_blocks": 0, "extra_information_num_words": null, "response": "/**\n *******************************************************************************\n * Description: \n * \n * Given an integer, convert it to a roman numeral. \n * Input is guaranteed to be within the range from 1 to 3999.\n * \n *******************************************************************************\n * @tag : Math; String\n * {@link https://leetcode.com/problems/integer-to-roman/ }\n */\npackage _012_IntegerToRoman;\n\n/** see test {@link _012_IntegerToRoman.PracticeTest } */\npublic class Practice {\n\n    public String intToRoman(int num) {\n        StringBuilder sb = new StringBuilder();\n        int[] values = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        String[] romanSymbols = {\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"};\n        \n        for (int i = 0; i < values.length; i++) {\n            while (num >= values[i]) {\n                num -= values[i];\n                sb.append(romanSymbols[i]);\n            }\n        }\n        \n        return sb.toString();\n    }\n\n}\n"}