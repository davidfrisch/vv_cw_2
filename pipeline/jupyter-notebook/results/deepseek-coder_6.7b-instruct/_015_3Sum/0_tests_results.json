{
    "num_tests": "4",
    "num_successes": 4,
    "num_failures": "0",
    "num_errors": "0",
    "timestamp": "2024-04-08T14:14:03",
    "test_cases": [
        {
            "name": "Test0",
            "time": "0.011",
            "success": true,
            "failure": null,
            "message": null,
            "code": "@Test\n    public void Test0() {\n        int[] nums = { -1, 0, 1, 2, -1, -4 };\n        List<List<Integer>> actual = solution.threeSum(nums);\n        List<List<Integer>> expected = new ArrayList<List<Integer>>();\n        expected.add(Arrays.asList(-1, -1, 2));\n        expected.add(Arrays.asList(-1, 0, 1));\n        // compare 2d list ignoring order\n        assertEqualsIgnoreOrder(expected, actual);\n    }"
        },
        {
            "name": "Test1",
            "time": "0.0",
            "success": true,
            "failure": null,
            "message": null,
            "code": "@Test\n    public void Test1() {\n        int[] nums = { -1, -6, -3, -7, -4, -4, 0, 3, -2, -10, -10, 9 };\n        List<List<Integer>> actual = solution.threeSum(nums);\n        List<List<Integer>> expected = new ArrayList<List<Integer>>();\n        expected.add(Arrays.asList(-2, -1, 3));\n        expected.add(Arrays.asList(-7, -2, 9));\n        expected.add(Arrays.asList(-6, -3, 9));\n        expected.add(Arrays.asList(-3, 0, 3));\n        assertEqualsIgnoreOrder(expected, actual);\n    }"
        },
        {
            "name": "Test2",
            "time": "0.001",
            "success": true,
            "failure": null,
            "message": null,
            "code": "@Test(timeout=100)\n    public void Test2() {\n        int[] nums = { 5, -11, -7, -2, 4, 9, 4, 4, -5, 12, 12, -14, -5, 3, -3,\n                -2, -6, 3, 3, -9, 4, -13, 6, 2, 11, 12, 10, -14, -15, 11, 0, 5,\n                8, 0, 10, -11, -6, -1, 0, 4, -4, -3, 5, -2, -15, 9, 11, -13,\n                -2, -8, -7, 9, -6, 7, -11, 12, 4, 14, 6, -4, 3, -9, -14, -12,\n                -2, 3, -8, 7, -13, 7, -12, -9, 11, 0, 4, 12, -6, -7, 14, -1, 0,\n                14, -6, 1, 6, -2, -9, -4, -11, 12, -1, -1, 10, -7, -6, -7, 11,\n                1, -15, 6, -15, -12, 12, 12, 3, 1, 9, 12, 9, 0, -11, -14, -1 };\n        List<List<Integer>> actual = solution.threeSum(nums);\n        List<List<Integer>> expected = new ArrayList<List<Integer>>();\n        expected.add(Arrays.asList(-15, 1, 14));\n        expected.add(Arrays.asList(-15, 3, 12));\n        expected.add(Arrays.asList(-15, 4, 11));\n        expected.add(Arrays.asList(-15, 5, 10));\n        expected.add(Arrays.asList(-15, 6, 9));\n        expected.add(Arrays.asList(-15, 7, 8));\n\n        expected.add(Arrays.asList(-14, 0, 14));\n        expected.add(Arrays.asList(-14, 2, 12));\n        expected.add(Arrays.asList(-14, 3, 11));\n        expected.add(Arrays.asList(-14, 4, 10));\n        expected.add(Arrays.asList(-14, 5, 9));\n        expected.add(Arrays.asList(-14, 6, 8));\n        expected.add(Arrays.asList(-14, 7, 7));\n\n        expected.add(Arrays.asList(-13, -1, 14));\n        expected.add(Arrays.asList(-13, 1, 12));\n        expected.add(Arrays.asList(-13, 2, 11));\n        expected.add(Arrays.asList(-13, 3, 10));\n        expected.add(Arrays.asList(-13, 4, 9));\n        expected.add(Arrays.asList(-13, 5, 8));\n        expected.add(Arrays.asList(-13, 6, 7));\n\n        expected.add(Arrays.asList(-12, -2, 14));\n        expected.add(Arrays.asList(-12, 0, 12));\n        expected.add(Arrays.asList(-12, 1, 11));\n        expected.add(Arrays.asList(-12, 2, 10));\n        expected.add(Arrays.asList(-12, 3, 9));\n        expected.add(Arrays.asList(-12, 4, 8));\n        expected.add(Arrays.asList(-12, 5, 7));\n        expected.add(Arrays.asList(-12, 6, 6));\n\n        expected.add(Arrays.asList(-11, -3, 14));\n        expected.add(Arrays.asList(-11, -1, 12));\n        expected.add(Arrays.asList(-11, 0, 11));\n        expected.add(Arrays.asList(-11, 1, 10));\n        expected.add(Arrays.asList(-11, 2, 9));\n        expected.add(Arrays.asList(-11, 3, 8));\n        expected.add(Arrays.asList(-11, 4, 7));\n        expected.add(Arrays.asList(-11, 5, 6));\n\n        expected.add(Arrays.asList(-9, -5, 14));\n        expected.add(Arrays.asList(-9, -3, 12));\n        expected.add(Arrays.asList(-9, -2, 11));\n        expected.add(Arrays.asList(-9, -1, 10));\n        expected.add(Arrays.asList(-9, 0, 9));\n        expected.add(Arrays.asList(-9, 1, 8));\n        expected.add(Arrays.asList(-9, 2, 7));\n        expected.add(Arrays.asList(-9, 3, 6));\n        expected.add(Arrays.asList(-9, 4, 5));\n\n        expected.add(Arrays.asList(-8, -6, 14));\n        expected.add(Arrays.asList(-8, -4, 12));\n        expected.add(Arrays.asList(-8, -3, 11));\n        expected.add(Arrays.asList(-8, -2, 10));\n        expected.add(Arrays.asList(-8, -1, 9));\n        expected.add(Arrays.asList(-8, 0, 8));\n        expected.add(Arrays.asList(-8, 1, 7));\n        expected.add(Arrays.asList(-8, 2, 6));\n        expected.add(Arrays.asList(-8, 3, 5));\n        expected.add(Arrays.asList(-8, 4, 4));\n\n        expected.add(Arrays.asList(-7, -7, 14));\n        expected.add(Arrays.asList(-7, -5, 12));\n        expected.add(Arrays.asList(-7, -4, 11));\n        expected.add(Arrays.asList(-7, -3, 10));\n        expected.add(Arrays.asList(-7, -2, 9));\n        expected.add(Arrays.asList(-7, -1, 8));\n        expected.add(Arrays.asList(-7, 0, 7));\n        expected.add(Arrays.asList(-7, 1, 6));\n        expected.add(Arrays.asList(-7, 2, 5));\n        expected.add(Arrays.asList(-7, 3, 4));\n\n        expected.add(Arrays.asList(-6, -6, 12));\n        expected.add(Arrays.asList(-6, -5, 11));\n        expected.add(Arrays.asList(-6, -4, 10));\n        expected.add(Arrays.asList(-6, -3, 9));\n        expected.add(Arrays.asList(-6, -2, 8));\n        expected.add(Arrays.asList(-6, -1, 7));\n        expected.add(Arrays.asList(-6, 0, 6));\n        expected.add(Arrays.asList(-6, 1, 5));\n        expected.add(Arrays.asList(-6, 2, 4));\n        expected.add(Arrays.asList(-6, 3, 3));\n\n        expected.add(Arrays.asList(-5, -5, 10));\n        expected.add(Arrays.asList(-5, -4, 9));\n        expected.add(Arrays.asList(-5, -3, 8));\n        expected.add(Arrays.asList(-5, -2, 7));\n        expected.add(Arrays.asList(-5, -1, 6));\n        expected.add(Arrays.asList(-5, 0, 5));\n        expected.add(Arrays.asList(-5, 1, 4));\n        expected.add(Arrays.asList(-5, 2, 3));\n\n        expected.add(Arrays.asList(-4, -4, 8));\n        expected.add(Arrays.asList(-4, -3, 7));\n        expected.add(Arrays.asList(-4, -2, 6));\n        expected.add(Arrays.asList(-4, -1, 5));\n        expected.add(Arrays.asList(-4, 0, 4));\n        expected.add(Arrays.asList(-4, 1, 3));\n\n        expected.add(Arrays.asList(-3, -3, 6));\n        expected.add(Arrays.asList(-3, -2, 5));\n        expected.add(Arrays.asList(-3, -1, 4));\n        expected.add(Arrays.asList(-3, 0, 3));\n        expected.add(Arrays.asList(-3, 1, 2));\n\n        expected.add(Arrays.asList(-2, -2, 4));\n        expected.add(Arrays.asList(-2, -1, 3));\n        expected.add(Arrays.asList(-2, 0, 2));\n        expected.add(Arrays.asList(-2, 1, 1));\n\n        expected.add(Arrays.asList(-1, -1, 2));\n        expected.add(Arrays.asList(-1, 0, 1));\n        expected.add(Arrays.asList(0, 0, 0));\n\n        assertEqualsIgnoreOrder(expected, actual);\n    }"
        },
        {
            "name": "Test3",
            "time": "0.002",
            "success": true,
            "failure": null,
            "message": null,
            "code": "@Test(timeout=100)\n    public void Test3() {\n        int[] nums = { 7, -1, 14, -12, -8, 7, 2, -15, 8, 8, -8, -14, -4, -5, 7,\n                9, 11, -4, -15, -6, 1, -14, 4, 3, 10, -5, 2, 1, 6, 11, 2, -2,\n                -5, -7, -6, 2, -15, 11, -6, 8, -4, 2, 1, -1, 4, -6, -15, 1, 5,\n                -15, 10, 14, 9, -8, -6, 4, -6, 11, 12, -15, 7, -1, -9, 9, -1,\n                0, -4, -1, -12, -2, 14, -9, 7, 0, -3, -4, 1, -2, 12, 14, -10,\n                0, 5, 14, -1, 14, 3, 8, 10, -8, 8, -5, -2, 6, -11, 12, 13, -7,\n                -12, 8, 6, -13, 14, -2, -5, -11, 1, 3, -6 };\n        List<List<Integer>> actual = solution.threeSum(nums);\n        List<List<Integer>> expected = new ArrayList<List<Integer>>();\n\n        expected.add(Arrays.asList(-15, 1, 14));\n        expected.add(Arrays.asList(-15, 2, 13));\n        expected.add(Arrays.asList(-15, 3, 12));\n        expected.add(Arrays.asList(-15, 4, 11));\n        expected.add(Arrays.asList(-15, 5, 10));\n        expected.add(Arrays.asList(-15, 6, 9));\n        expected.add(Arrays.asList(-15, 7, 8));\n\n        expected.add(Arrays.asList(-14, 0, 14));\n        expected.add(Arrays.asList(-14, 1, 13));\n        expected.add(Arrays.asList(-14, 2, 12));\n        expected.add(Arrays.asList(-14, 3, 11));\n        expected.add(Arrays.asList(-14, 4, 10));\n        expected.add(Arrays.asList(-14, 5, 9));\n        expected.add(Arrays.asList(-14, 6, 8));\n        expected.add(Arrays.asList(-14, 7, 7));\n\n        expected.add(Arrays.asList(-13, -1, 14));\n        expected.add(Arrays.asList(-13, 0, 13));\n        expected.add(Arrays.asList(-13, 1, 12));\n        expected.add(Arrays.asList(-13, 2, 11));\n        expected.add(Arrays.asList(-13, 3, 10));\n        expected.add(Arrays.asList(-13, 4, 9));\n        expected.add(Arrays.asList(-13, 5, 8));\n        expected.add(Arrays.asList(-13, 6, 7));\n\n        expected.add(Arrays.asList(-12, -2, 14));\n        expected.add(Arrays.asList(-12, -1, 13));\n        expected.add(Arrays.asList(-12, 0, 12));\n        expected.add(Arrays.asList(-12, 1, 11));\n        expected.add(Arrays.asList(-12, 2, 10));\n        expected.add(Arrays.asList(-12, 3, 9));\n        expected.add(Arrays.asList(-12, 4, 8));\n        expected.add(Arrays.asList(-12, 5, 7));\n        expected.add(Arrays.asList(-12, 6, 6));\n\n        expected.add(Arrays.asList(-11, -3, 14));\n        expected.add(Arrays.asList(-11, -2, 13));\n        expected.add(Arrays.asList(-11, -1, 12));\n        expected.add(Arrays.asList(-11, 0, 11));\n        expected.add(Arrays.asList(-11, 1, 10));\n        expected.add(Arrays.asList(-11, 2, 9));\n        expected.add(Arrays.asList(-11, 3, 8));\n        expected.add(Arrays.asList(-11, 4, 7));\n        expected.add(Arrays.asList(-11, 5, 6));\n\n        expected.add(Arrays.asList(-10, -4, 14));\n        expected.add(Arrays.asList(-10, -3, 13));\n        expected.add(Arrays.asList(-10, -2, 12));\n        expected.add(Arrays.asList(-10, -1, 11));\n        expected.add(Arrays.asList(-10, 0, 10));\n        expected.add(Arrays.asList(-10, 1, 9));\n        expected.add(Arrays.asList(-10, 2, 8));\n        expected.add(Arrays.asList(-10, 3, 7));\n        expected.add(Arrays.asList(-10, 4, 6));\n        expected.add(Arrays.asList(-10, 5, 5));\n\n        expected.add(Arrays.asList(-9, -5, 14));\n        expected.add(Arrays.asList(-9, -4, 13));\n        expected.add(Arrays.asList(-9, -3, 12));\n        expected.add(Arrays.asList(-9, -2, 11));\n        expected.add(Arrays.asList(-9, -1, 10));\n        expected.add(Arrays.asList(-9, 0, 9));\n        expected.add(Arrays.asList(-9, 1, 8));\n        expected.add(Arrays.asList(-9, 2, 7));\n        expected.add(Arrays.asList(-9, 3, 6));\n        expected.add(Arrays.asList(-9, 4, 5));\n\n        expected.add(Arrays.asList(-8, -6, 14));\n        expected.add(Arrays.asList(-8, -5, 13));\n        expected.add(Arrays.asList(-8, -4, 12));\n        expected.add(Arrays.asList(-8, -3, 11));\n        expected.add(Arrays.asList(-8, -2, 10));\n        expected.add(Arrays.asList(-8, -1, 9));\n        expected.add(Arrays.asList(-8, 0, 8));\n        expected.add(Arrays.asList(-8, 1, 7));\n        expected.add(Arrays.asList(-8, 2, 6));\n        expected.add(Arrays.asList(-8, 3, 5));\n        expected.add(Arrays.asList(-8, 4, 4));\n\n        expected.add(Arrays.asList(-7, -7, 14));\n        expected.add(Arrays.asList(-7, -6, 13));\n        expected.add(Arrays.asList(-7, -5, 12));\n        expected.add(Arrays.asList(-7, -4, 11));\n        expected.add(Arrays.asList(-7, -3, 10));\n        expected.add(Arrays.asList(-7, -2, 9));\n        expected.add(Arrays.asList(-7, -1, 8));\n        expected.add(Arrays.asList(-7, 0, 7));\n        expected.add(Arrays.asList(-7, 1, 6));\n        expected.add(Arrays.asList(-7, 2, 5));\n        expected.add(Arrays.asList(-7, 3, 4));\n\n        expected.add(Arrays.asList(-6, -6, 12));\n        expected.add(Arrays.asList(-6, -5, 11));\n        expected.add(Arrays.asList(-6, -4, 10));\n        expected.add(Arrays.asList(-6, -3, 9));\n        expected.add(Arrays.asList(-6, -2, 8));\n        expected.add(Arrays.asList(-6, -1, 7));\n        expected.add(Arrays.asList(-6, 0, 6));\n        expected.add(Arrays.asList(-6, 1, 5));\n        expected.add(Arrays.asList(-6, 2, 4));\n        expected.add(Arrays.asList(-6, 3, 3));\n\n        expected.add(Arrays.asList(-5, -5, 10));\n        expected.add(Arrays.asList(-5, -4, 9));\n        expected.add(Arrays.asList(-5, -3, 8));\n        expected.add(Arrays.asList(-5, -2, 7));\n        expected.add(Arrays.asList(-5, -1, 6));\n        expected.add(Arrays.asList(-5, 0, 5));\n        expected.add(Arrays.asList(-5, 1, 4));\n        expected.add(Arrays.asList(-5, 2, 3));\n\n        expected.add(Arrays.asList(-4, -4, 8));\n        expected.add(Arrays.asList(-4, -3, 7));\n        expected.add(Arrays.asList(-4, -2, 6));\n        expected.add(Arrays.asList(-4, -1, 5));\n        expected.add(Arrays.asList(-4, 0, 4));\n        expected.add(Arrays.asList(-4, 1, 3));\n        expected.add(Arrays.asList(-4, 2, 2));\n\n        expected.add(Arrays.asList(-3, -2, 5));\n        expected.add(Arrays.asList(-3, -1, 4));\n        expected.add(Arrays.asList(-3, 0, 3));\n        expected.add(Arrays.asList(-3, 1, 2));\n\n        expected.add(Arrays.asList(-2, -2, 4));\n        expected.add(Arrays.asList(-2, -1, 3));\n        expected.add(Arrays.asList(-2, 0, 2));\n        expected.add(Arrays.asList(-2, 1, 1));\n\n        expected.add(Arrays.asList(-1, -1, 2));\n        expected.add(Arrays.asList(-1, 0, 1));\n        expected.add(Arrays.asList(0, 0, 0));\n\n        assertEqualsIgnoreOrder(expected, actual);\n    }"
        }
    ]
}