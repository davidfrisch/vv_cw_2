{"is_extracted": true, "number_of_code_blocks": 1, "extra_information_num_words": 1, "response": "```\npackage _017_LetterCombinationsOfAPhoneNumber;\n\nimport java.util.List;\nimport java.util.ArrayList;\n\npublic class Practice {\n    public List<String> letterCombinations(String digits) {\n        String[] mapping = new String[]{\"0\", \"1\", \"abc\", \"def\", \"ghi\", \"jkl\", \"mno\", \"pqrs\", \"tuv\", \"wxyz\"};\n        \n        List<String> result = new ArrayList<>();\n        if (digits == null || digits.length() == 0) {\n            return result;\n        }\n        \n        helper(result, digits, \"\", 0, mapping);\n        return result;\n    }\n    \n    private void helper(List<String> result, String digits, String current, int index, String[] mapping) {\n        if (index == digits.length()) {\n            result.add(current);\n            return;\n       }\n        \n        String letters = mapping[digits.charAt(index) - '0'];\n        for (int i = 0; i < letters.length(); i++) {\n            helper(result, digits, current + letters.charAt(i), index + 1, mapping);\n        }\n    }\n}\n```\n"}