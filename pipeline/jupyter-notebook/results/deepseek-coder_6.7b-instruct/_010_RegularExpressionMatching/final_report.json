{
    "total_retries": 1,
    "model": "deepseek-coder:6.7b-instruct",
    "leetcode_question": "_010_RegularExpressionMatching",
    "passed": true,
    "tries": {
        "0": {
            "extra_prompt": "Replace  // TODO Auto-generated method stub with your solution code. Only answer with the complete file. Don't explain !",
            "is_extracted": true,
            "number_of_code_blocks": 1,
            "extra_information_num_words": 1,
            "response": "```\npackage _010_RegularExpressionMatching;\n\n/** see test {@link _010_RegularExpressionMatching.PracticeTest } */\npublic class Practice {\n    public boolean isMatch(String s, String p) {\n        if (p.isEmpty()) \n            return s.isEmpty();\n        \n        boolean first_match = (!s.isEmpty() && \n                              (p.charAt(0) == s.charAt(0) || p.charAt(0) == '.'));\n\n        if (p.length() >= 2 && p.charAt(1) == '*') {\n            return isMatch(s, p.substring(2)) || \n                   first_match && isMatch(s.substring(1), p);\n        } else {\n            return first_match && isMatch(s.substring(1), p.substring(1));\n        }\n    }\n}\n```\n",
            "number_of_issues": 0,
            "issues": [],
            "num_tests": "15",
            "num_successes": 15,
            "num_failures": "0",
            "num_errors": "0",
            "timestamp": "2024-04-08T14:12:50",
            "test_cases": [
                {
                    "name": "Test10",
                    "time": "0.005",
                    "success": true,
                    "failure": null,
                    "message": null,
                    "code": "@Test\n    public void Test10() {\n        String s = \"aaa\";\n        String p = \"aa.a\";\n        assertTrue(!solution.isMatch(s, p));\n    }"
                },
                {
                    "name": "Test11",
                    "time": "0.001",
                    "success": true,
                    "failure": null,
                    "message": null,
                    "code": "@Test\n    public void Test11() {\n        String s = \"aaa\";\n        String p = \"ab*a\";\n        assertTrue(!solution.isMatch(s, p));\n    }"
                },
                {
                    "name": "Test12",
                    "time": "0.0",
                    "success": true,
                    "failure": null,
                    "message": null,
                    "code": "@Test\n    public void Test12() {\n        String s = \"aaa\";\n        String p = \"*a\";\n        assertTrue(!solution.isMatch(s, p));\n    }"
                },
                {
                    "name": "Test13",
                    "time": "0.001",
                    "success": true,
                    "failure": null,
                    "message": null,
                    "code": "@Test\n    public void Test13() {\n        String s = \"ab\";\n        String p = \".*c\";\n        assertTrue(!solution.isMatch(s, p));\n    }"
                },
                {
                    "name": "Test14",
                    "time": "0.0",
                    "success": true,
                    "failure": null,
                    "message": null,
                    "code": "@Test\n    public void Test14() {\n        String s = \"\";\n        String p = \".*\";\n        assertTrue(solution.isMatch(s, p));\n    }"
                },
                {
                    "name": "Test15",
                    "time": "0.0",
                    "success": true,
                    "failure": null,
                    "message": null,
                    "code": "@Test\n    public void Test15() {\n        String s = \"baccbbcbcacacbbc\";\n        String p = \"c*.*b*c*ba*b*b*.a*\";\n        assertTrue(solution.isMatch(s, p));\n    }"
                },
                {
                    "name": "Test1",
                    "time": "0.0",
                    "success": true,
                    "failure": null,
                    "message": null,
                    "code": "@Test\n    public void Test1() {\n        String s = \"aa\";\n        String p = \"a\";\n        assertTrue(!solution.isMatch(s, p));\n    }"
                },
                {
                    "name": "Test2",
                    "time": "0.0",
                    "success": true,
                    "failure": null,
                    "message": null,
                    "code": "@Test\n    public void Test2() {\n        String s = \"aa\";\n        String p = \"aa\";\n        assertTrue(solution.isMatch(s, p));\n    }"
                },
                {
                    "name": "Test3",
                    "time": "0.0",
                    "success": true,
                    "failure": null,
                    "message": null,
                    "code": "@Test\n    public void Test3() {\n        String s = \"aaa\";\n        String p = \"aa\";\n        assertTrue(!solution.isMatch(s, p));\n    }"
                },
                {
                    "name": "Test4",
                    "time": "0.0",
                    "success": true,
                    "failure": null,
                    "message": null,
                    "code": "@Test\n    public void Test4() {\n        String s = \"aa\";\n        String p = \"a*\";\n        assertTrue(solution.isMatch(s, p));\n    }"
                },
                {
                    "name": "Test5",
                    "time": "0.001",
                    "success": true,
                    "failure": null,
                    "message": null,
                    "code": "@Test\n    public void Test5() {\n        String s = \"aa\";\n        String p = \".*\";\n        assertTrue(solution.isMatch(s, p));\n    }"
                },
                {
                    "name": "Test6",
                    "time": "0.0",
                    "success": true,
                    "failure": null,
                    "message": null,
                    "code": "@Test\n    public void Test6() {\n        String s = \"ab\";\n        String p = \".*\";\n        assertTrue(solution.isMatch(s, p));\n    }"
                },
                {
                    "name": "Test7",
                    "time": "0.0",
                    "success": true,
                    "failure": null,
                    "message": null,
                    "code": "@Test\n    public void Test7() {\n        String s = \"aab\";\n        String p = \"c*a*b\";\n        assertTrue(solution.isMatch(s, p));\n    }"
                },
                {
                    "name": "Test8",
                    "time": "0.001",
                    "success": true,
                    "failure": null,
                    "message": null,
                    "code": "@Test\n    public void Test8() {\n        String s = \"aaa\";\n        String p = \"a.a\";\n        assertTrue(solution.isMatch(s, p));\n    }"
                },
                {
                    "name": "Test9",
                    "time": "0.0",
                    "success": true,
                    "failure": null,
                    "message": null,
                    "code": "@Test\n    public void Test9() {\n        String s = \"aaa\";\n        String p = \"ab*ac*a\";\n        assertTrue(solution.isMatch(s, p));\n    }"
                }
            ]
        }
    }
}