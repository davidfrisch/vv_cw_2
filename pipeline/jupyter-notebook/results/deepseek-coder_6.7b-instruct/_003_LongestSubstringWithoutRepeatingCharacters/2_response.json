{"is_extracted": true, "number_of_code_blocks": 1, "extra_information_num_words": 162, "response": "The java code for the problem is as follows:\n\n```\nimport java.util.*;\npublic class Practice {\n    public int lengthOfLongestSubstringKDistinct(String s, int k) {\n        if (k==0 || s.length() == 0) return 0;\n        \n        HashMap<Character, Integer> map = new HashMap<>();\n        int maxLength = 1;\n        int left = 0;\n      \n        for (int i=0; i<s.length(); ++i){  \n            char c = s.charAt(i); \n            \n            if(!map.containsKey(c)){  \n                map.put(c,1);\n                \n                while (map.size() > k) {  \n                    char leftChar = s.charAt(left);\n                    if(map.get(leftChar) == 1){\n                        map.remove(leftChar);\n                    } else {\n                        map.put(leftChar, map.get(leftChar)-1);\n                    }\n                    \n                    left++;\n                }\n            } else {\n                map.put(c,map.get(c)+1);  \n            }\n            \n            maxLength = Math.max(maxLength, i - left + 1); \n        }\n        \n        return maxLength;  \n    }\n}\n```\nThis Java code contains a method `lengthOfLongestSubstringKDistinct` which takes a string s and an integer k as input parameters. It finds the length of longest substring with at most k distinct characters in it. The sliding window is used to traverse through the whole string from left to right. If a character is not present in the hashmap, then it's added into the map. If size exceeds k, we start removing elements from the left until the size becomes equal to k and again add current element at right end of substring. At each point of time we calculate maxLength as maximum length so far with number of unique characters equals to `k`. \nFinally this value is returned as longest possible string's length which contains exactly k distinct characters. If there are no more than k distinct characters in the input string, then method returns zero because it means that such substring doesn't exist.\n"}