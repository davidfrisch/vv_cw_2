{"is_extracted": false, "number_of_code_blocks": 0, "extra_information_num_words": null, "response": "package _003_LongestSubstringWithoutRepeatingCharacters;\n\nimport java.util.HashSet;\nimport java.util.Set;\n\npublic class Practice {\n    public int lengthOfLongestSubstring(String s) {\n        if (s == null || s.length() == 0) return 0;\n        \n        Set<Character> set = new HashSet<>();\n        int maxLen = 0, i = 0, j = 0;\n        \n        while (i < s.length()) {\n            if (!set.contains(s.charAt(i))) {\n                set.add(s.charAt(i));\n                i++;\n                maxLen = Math.max(maxLen, set.size());\n            } else {\n                set.remove(s.charAt(j));\n                j++;\n            }\n        }\n        \n        return maxLen;\n    }\n}\n"}