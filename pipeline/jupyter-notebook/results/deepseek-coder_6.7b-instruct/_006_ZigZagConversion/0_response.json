{"is_extracted": false, "number_of_code_blocks": 0, "extra_information_num_words": null, "response": "package _006_ZigZagConversion;\n\n/** see test {@link _006PracticeTest\ufeff } */\npublic class Practice {\n\n    public String convert(String a, int b) {\n        if (b <= 1 || a == null || a.length() <= b) return a; // base cases: \n\n        int len = a.length();\n        char[] result = new char[len];\n        int i = 0, j = 0;\n        while(i < len){\n            int gap1 = 2 * (b - 1); // first downward line\n            int gap2 = b > 2 ? 2 : 0; // second upward line (only if there are more than two rows)\n            \n            for (int k = 0; i < len && j < result.length; ++k,++j){\n                result[j] = a.charAt(i);\n                \n                int gap = k < b - 1 ? gap1 : gap2; // set the correct gap size\n                if (gap > 0) { i += gap; j+= gap;} else ++i;\n            }\n        }\n        \n        return new String(result);\n    }\n}\n"}