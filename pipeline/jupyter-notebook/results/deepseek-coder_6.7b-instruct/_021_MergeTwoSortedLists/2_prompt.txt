The following code has the following error: 
Message: junit.framework.AssertionFailedError
@Test
    public void Test1() {
        ListNode node11 = new ListNode(1);
        ListNode node21 = new ListNode(2);
        ListNode actual = solution.mergeTwoLists(node11, node21);
        ListNode node1 = new ListNode(1);
        ListNode node2 = new ListNode(2);
        node1.next = node2;
        ListNode expect = node1;
        assertTrue(ListNode.isSameList(actual, expect));
    }

Message: junit.framework.AssertionFailedError
@Test
    public void Test2() {
        int[] nums1 = {1, 3, 5};
        ListNode l1 = ListNode.constructLinkedList(nums1);
        int[] nums2 = {2, 4, 6};
        ListNode l2 = ListNode.constructLinkedList(nums2);
        ListNode actual = solution.mergeTwoLists(l1, l2);

        int[] exps = {1, 2, 3, 4, 5, 6};
        ListNode expected = ListNode.constructLinkedList(exps);

        assertTrue(ListNode.isSameList(actual, expected));
    }

Message: junit.framework.AssertionFailedError
@Test
    public void Test3() {
        int[] nums1 = {1, 5};
        ListNode l1 = ListNode.constructLinkedList(nums1);
        int[] nums2 = {2, 4, 6};
        ListNode l2 = ListNode.constructLinkedList(nums2);
        ListNode actual = solution.mergeTwoLists(l1, l2);
        int[] exps = {1, 2, 4, 5, 6};
        ListNode expected = ListNode.constructLinkedList(exps);
        assertTrue(ListNode.isSameList(actual, expected));
    }

Message: junit.framework.AssertionFailedError
@Test
    public void Test4() {
        int[] nums1 = {1, 3, 5};
        ListNode l1 = ListNode.constructLinkedList(nums1);
        int[] nums2 = {2, 4};
        ListNode l2 = ListNode.constructLinkedList(nums2);
        ListNode actual = solution.mergeTwoLists(l1, l2);
        int[] exps = {1, 2, 3, 4, 5};
        ListNode expected = ListNode.constructLinkedList(exps);
        assertTrue(ListNode.isSameList(actual, expected));
    }


. Retry with a fix of the complete file. Don't explain! Only give the java code

package _021_MergeTwoSortedLists;

import com.leetcode.ListNode;

public class Practice {

    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        // Create a new list node that will be the head of our merged list
        ListNode dummy = new ListNode(-1);
        
        // Keep track of current position in the final merged list
        ListNode prev = dummy;
        
        while (l1 != null && l2 != null) {
            if (l1.val <= l2.val) {
                prev.next = l1;
                l1 = l1.next;
            } else {
                prev.next = l2;
                l2 = l2.next;
            } 
            
        // This is the closing brace for mergeTwoLists method
        }
        
        if (l1 != null)
            prev.next = l1;
        else if (l2 != null)
            prev.next = l2;
    
        return dummy.next;
    }
}
