{
    "num_tests": "5",
    "num_successes": 1,
    "num_failures": "4",
    "num_errors": "0",
    "timestamp": "2024-04-08T14:16:01",
    "test_cases": [
        {
            "name": "Test0",
            "time": "0.011",
            "success": true,
            "failure": null,
            "message": null,
            "code": "@Test\n    public void Test0() {\n        ListNode node11 = null;\n        ListNode node21 = null;\n        ListNode actual = solution.mergeTwoLists(node11, node21);\n        ListNode expect = null;\n        assertTrue(ListNode.isSameList(actual, expect));\n    }"
        },
        {
            "name": "Test1",
            "time": "0.003",
            "success": false,
            "failure": {
                "@type": "junit.framework.AssertionFailedError",
                "#text": "junit.framework.AssertionFailedError\n\tat _021_MergeTwoSortedLists.PracticeTest.Test1(Unknown Source)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)"
            },
            "message": "junit.framework.AssertionFailedError",
            "code": "@Test\n    public void Test1() {\n        ListNode node11 = new ListNode(1);\n        ListNode node21 = new ListNode(2);\n        ListNode actual = solution.mergeTwoLists(node11, node21);\n        ListNode node1 = new ListNode(1);\n        ListNode node2 = new ListNode(2);\n        node1.next = node2;\n        ListNode expect = node1;\n        assertTrue(ListNode.isSameList(actual, expect));\n    }"
        },
        {
            "name": "Test2",
            "time": "0.002",
            "success": false,
            "failure": {
                "@type": "junit.framework.AssertionFailedError",
                "#text": "junit.framework.AssertionFailedError\n\tat _021_MergeTwoSortedLists.PracticeTest.Test2(Unknown Source)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)"
            },
            "message": "junit.framework.AssertionFailedError",
            "code": "@Test\n    public void Test2() {\n        int[] nums1 = {1, 3, 5};\n        ListNode l1 = ListNode.constructLinkedList(nums1);\n        int[] nums2 = {2, 4, 6};\n        ListNode l2 = ListNode.constructLinkedList(nums2);\n        ListNode actual = solution.mergeTwoLists(l1, l2);\n\n        int[] exps = {1, 2, 3, 4, 5, 6};\n        ListNode expected = ListNode.constructLinkedList(exps);\n\n        assertTrue(ListNode.isSameList(actual, expected));\n    }"
        },
        {
            "name": "Test3",
            "time": "0.009",
            "success": false,
            "failure": {
                "@type": "junit.framework.AssertionFailedError",
                "#text": "junit.framework.AssertionFailedError\n\tat _021_MergeTwoSortedLists.PracticeTest.Test3(Unknown Source)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)"
            },
            "message": "junit.framework.AssertionFailedError",
            "code": "@Test\n    public void Test3() {\n        int[] nums1 = {1, 5};\n        ListNode l1 = ListNode.constructLinkedList(nums1);\n        int[] nums2 = {2, 4, 6};\n        ListNode l2 = ListNode.constructLinkedList(nums2);\n        ListNode actual = solution.mergeTwoLists(l1, l2);\n        int[] exps = {1, 2, 4, 5, 6};\n        ListNode expected = ListNode.constructLinkedList(exps);\n        assertTrue(ListNode.isSameList(actual, expected));\n    }"
        },
        {
            "name": "Test4",
            "time": "0.014",
            "success": false,
            "failure": {
                "@type": "junit.framework.AssertionFailedError",
                "#text": "junit.framework.AssertionFailedError\n\tat _021_MergeTwoSortedLists.PracticeTest.Test4(Unknown Source)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)"
            },
            "message": "junit.framework.AssertionFailedError",
            "code": "@Test\n    public void Test4() {\n        int[] nums1 = {1, 3, 5};\n        ListNode l1 = ListNode.constructLinkedList(nums1);\n        int[] nums2 = {2, 4};\n        ListNode l2 = ListNode.constructLinkedList(nums2);\n        ListNode actual = solution.mergeTwoLists(l1, l2);\n        int[] exps = {1, 2, 3, 4, 5};\n        ListNode expected = ListNode.constructLinkedList(exps);\n        assertTrue(ListNode.isSameList(actual, expected));\n    }"
        }
    ]
}