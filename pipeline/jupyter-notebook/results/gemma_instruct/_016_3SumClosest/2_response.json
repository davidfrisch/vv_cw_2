{"is_extracted": true, "number_of_code_blocks": 1, "extra_information_num_words": 1, "response": "```\npackage _016_3SumClosest;\n\n/** see test {@link _016_3SumClosest.PracticeTest } */\npublic class Practice {\n\n    public int threeSumClosest(int[] nums, int target) {\n        int n = nums.length;\n        if (n < 3) {\n            return 0;\n        }\n\n        Arrays.sort(nums);\n\n        int closestSum = nums[0] + nums[1] + nums[2];\n        int minDistance = Integer.MAX_VALUE;\n\n        for (int i = 0; i < n; i++) {\n            int left = i + 1;\n            int right = n - 1;\n\n            while (left < right) {\n                int currentSum = nums[i] + nums[left] + nums[right];\n\n                if (Math.abs(currentSum - target) < minDistance) {\n                    closestSum = currentSum;\n                    minDistance = Math.abs(currentSum - target);\n                }\n\n                if (currentSum < target) {\n                    left++;\n                } else if (currentSum > target) {\n                    right--;\n                } else {\n                    return target;\n                }\n            }\n        }\n\n        return closestSum;\n    }\n}\n```"}