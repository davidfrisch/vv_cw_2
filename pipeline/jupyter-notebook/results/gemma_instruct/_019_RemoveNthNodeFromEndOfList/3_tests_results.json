{
    "num_tests": "4",
    "num_successes": 0,
    "num_failures": "4",
    "num_errors": "0",
    "timestamp": "2024-04-09T13:51:57",
    "test_cases": [
        {
            "name": "Test1",
            "time": "0.008",
            "success": false,
            "failure": {
                "@type": "junit.framework.AssertionFailedError",
                "#text": "junit.framework.AssertionFailedError\n\tat _019_RemoveNthNodeFromEndOfList.PracticeTest.Test1(Unknown Source)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)"
            },
            "message": "junit.framework.AssertionFailedError",
            "code": "@Test\n    public void Test1() {\n        int n = 2;\n        int[] nums = {1, 2, 3, 4, 5};\n        ListNode head = ListNode.constructLinkedList(nums);\n        ListNode actual = solution.removeNthFromEnd(head, n);\n        // 1->2->3->5\n        int[] exps = {1, 2, 3, 5};\n        ListNode expect = ListNode.constructLinkedList(exps);\n        assertTrue(ListNode.isSameList(actual, expect));\n    }"
        },
        {
            "name": "Test2",
            "time": "0.001",
            "success": false,
            "failure": {
                "@type": "junit.framework.AssertionFailedError",
                "#text": "junit.framework.AssertionFailedError\n\tat _019_RemoveNthNodeFromEndOfList.PracticeTest.Test2(Unknown Source)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)"
            },
            "message": "junit.framework.AssertionFailedError",
            "code": "@Test\n    public void Test2() {\n        int n = 5;\n        int[] nums = {1, 2, 3, 4, 5};\n        ListNode head = ListNode.constructLinkedList(nums);\n        ListNode actual = solution.removeNthFromEnd(head, n);\n        // 2->3->4->5\n        int[] exps = {2, 3, 4, 5};\n        ListNode expect = ListNode.constructLinkedList(exps);\n        assertTrue(ListNode.isSameList(actual, expect));\n    }"
        },
        {
            "name": "Test3",
            "time": "0.001",
            "success": false,
            "failure": {
                "@type": "junit.framework.AssertionFailedError",
                "#text": "junit.framework.AssertionFailedError\n\tat _019_RemoveNthNodeFromEndOfList.PracticeTest.Test3(Unknown Source)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)"
            },
            "message": "junit.framework.AssertionFailedError",
            "code": "@Test\n    public void Test3() {\n        int n = 1;\n        int[] nums = {1, 2, 3, 4, 5};\n        ListNode head = ListNode.constructLinkedList(nums);\n        ListNode actual = solution.removeNthFromEnd(head, n);\n        int[] exps = {1, 2, 3, 4};\n        ListNode expect = ListNode.constructLinkedList(exps);\n        assertTrue(ListNode.isSameList(actual, expect));\n    }"
        },
        {
            "name": "Test5",
            "time": "0.0",
            "success": false,
            "failure": {
                "@type": "junit.framework.AssertionFailedError",
                "#text": "junit.framework.AssertionFailedError\n\tat _019_RemoveNthNodeFromEndOfList.PracticeTest.Test5(Unknown Source)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)"
            },
            "message": "junit.framework.AssertionFailedError",
            "code": "@Test\n    public void Test5() {\n        int n = 1;\n        int[] nums = {1};\n        ListNode head = ListNode.constructLinkedList(nums);\n        ListNode actual = solution.removeNthFromEnd(head, n);\n        int[] exps = {};\n        ListNode expect = ListNode.constructLinkedList(exps);\n        assertTrue(ListNode.isSameList(actual, expect));\n    }"
        }
    ]
}