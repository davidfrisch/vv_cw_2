The following code has the following error: 



Message: junit.framework.AssertionFailedError
@Test
    public void Test14() {
        String s = "";
        String p = ".*";
        assertTrue(solution.isMatch(s, p));
    }

Message: junit.framework.AssertionFailedError
@Test
    public void Test15() {
        String s = "baccbbcbcacacbbc";
        String p = "c*.*b*c*ba*b*b*.a*";
        assertTrue(solution.isMatch(s, p));
    }




Message: junit.framework.AssertionFailedError
@Test
    public void Test4() {
        String s = "aa";
        String p = "a*";
        assertTrue(solution.isMatch(s, p));
    }

Message: junit.framework.AssertionFailedError
@Test
    public void Test5() {
        String s = "aa";
        String p = ".*";
        assertTrue(solution.isMatch(s, p));
    }

Message: junit.framework.AssertionFailedError
@Test
    public void Test6() {
        String s = "ab";
        String p = ".*";
        assertTrue(solution.isMatch(s, p));
    }

Message: junit.framework.AssertionFailedError
@Test
    public void Test7() {
        String s = "aab";
        String p = "c*a*b";
        assertTrue(solution.isMatch(s, p));
    }


Message: junit.framework.AssertionFailedError
@Test
    public void Test9() {
        String s = "aaa";
        String p = "ab*ac*a";
        assertTrue(solution.isMatch(s, p));
    }


. Retry with a fix of the complete file. Don't explain! Only give the java code

package _010_RegularExpressionMatching;

public class Practice {

    public boolean isMatch(String s, String p) {
        int i = 0, j = 0;
        int sl = s.length(), pl = p.length();

        while (i < sl && j < pl) {
            if (s.charAt(i) == p.charAt(j) || p.charAt(j) == '.') {
                i++;
                j++;
            } else if (p.charAt(j) == '*' && j > 0) {
                j = j - 1; // update j to point to the first character of the repeated pattern
            } else {
                return false;
            }
        }

        return j == pl && i == sl;
    }
}
