```java
package _005_LongestPalindromicSubstring;

public class Practice {

    public String longestPalindrome(String s) {
        int n = s.length();
        if (n <= 1) {
            return s;
        }
        String longest = "";
        for (int i = 0; i < n; i++) {
            for (int j = i; j < n; j++) {
                String current = s.substring(i, j + 1);
                if (isPalindrome(current) && current.length() > longest.length()) {
                    longest = current;
                }
            }
        }
        return longest;
    }

    private boolean isPalindrome(String s) {
        int left = 0;
        int right = s.length() - 1;
        while (left <= right) {
            if (s.charAt(left) != s.charAt(right)) {
                return false;
            }
            left++;
            right--;
        }
        return true;
    }
}
```