{
    "num_tests": "7",
    "num_successes": 2,
    "num_failures": "2",
    "num_errors": "3",
    "timestamp": "2024-04-09T13:37:00",
    "test_cases": [
        {
            "name": "Test1",
            "time": "0.01",
            "success": false,
            "failure": {
                "@message": "expected:<3.5> but was:<5.5>",
                "@type": "junit.framework.AssertionFailedError",
                "#text": "junit.framework.AssertionFailedError: expected:<3.5> but was:<5.5>\n\tat _004_MedianOfTwoSortedArrays.PracticeTest.Test1(Unknown Source)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)"
            },
            "message": "expected:<3.5> but was:<5.5>",
            "code": "@Test\n    public void Test1() {\n        int[] nums1 = { 1, 2, 3, 4, 5, 6 };\n        int[] nums2 = { 2, 3, 4, 5 };\n        double actual = solution.findMedianSortedArrays(nums1, nums2);\n        double expected = 3.5;\n        assertEquals(expected, actual, DELTA);\n    }"
        },
        {
            "name": "Test2",
            "time": "0.0",
            "success": true,
            "failure": null,
            "message": null,
            "code": "@Test\n    public void Test2() {\n        int[] nums1 = { 1, 2 };\n        int[] nums2 = { 3 };\n        double actual = solution.findMedianSortedArrays(nums1, nums2);\n        double expected = 2;\n        assertEquals(expected, actual, DELTA);\n    }"
        },
        {
            "name": "Test3",
            "time": "0.001",
            "success": true,
            "failure": null,
            "message": null,
            "code": "@Test\n    public void Test3() {\n        int[] nums1 = { 1, 2 };\n        int[] nums2 = { 3, 4, 5 };\n        double actual = solution.findMedianSortedArrays(nums1, nums2);\n        double expected = 3;\n        assertEquals(expected, actual, DELTA);\n    }"
        },
        {
            "name": "Test4",
            "time": "0.001",
            "success": true,
            "failure": null,
            "message": null,
            "code": "@Test\n    public void Test4() {\n        int[] nums1 = { 1, 2 };\n        int[] nums2 = { 3, 4 };\n        double actual = solution.findMedianSortedArrays(nums1, nums2);\n        double expected = 2.5;\n        assertEquals(expected, actual, DELTA);\n    }"
        },
        {
            "name": "Test5",
            "time": "0.001",
            "success": true,
            "failure": null,
            "message": null,
            "code": "@Test\n    public void Test5() {\n        int[] nums1 = { 1, 3, 5 };\n        int[] nums2 = { 2, 4, 6 };\n        double actual = solution.findMedianSortedArrays(nums1, nums2);\n        double expected = 3.5;\n        assertEquals(expected, actual, DELTA);\n    }"
        },
        {
            "name": "Test6",
            "time": "0.001",
            "success": false,
            "failure": {
                "@message": "expected:<4.0> but was:<8.0>",
                "@type": "junit.framework.AssertionFailedError",
                "#text": "junit.framework.AssertionFailedError: expected:<4.0> but was:<8.0>\n\tat _004_MedianOfTwoSortedArrays.PracticeTest.Test6(Unknown Source)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)"
            },
            "message": "expected:<4.0> but was:<8.0>",
            "code": "@Test\n    public void Test6() {\n        int[] nums1 = { 2, 4, 6, 8 };\n        int[] nums2 = { 1, 3, 5 };\n        double actual = solution.findMedianSortedArrays(nums1, nums2);\n        double expected = 4;\n        assertEquals(expected, actual, DELTA);\n    }"
        },
        {
            "name": "Test7",
            "time": "0.001",
            "success": true,
            "failure": null,
            "message": null,
            "code": "@Test\n    public void Test7() {\n        int[] nums1 = { };\n        int[] nums2 = { 1 };\n        double actual = solution.findMedianSortedArrays(nums1, nums2);\n        double expected = 1.0;\n        assertEquals(expected, actual, DELTA);\n    }"
        }
    ]
}