{"is_extracted": true, "number_of_code_blocks": 1, "extra_information_num_words": 1, "response": "```\npackage _003_LongestSubstringWithoutRepeatingCharacters;\n\npublic class Practice {\n\n    public int lengthOfLongestSubstring(String a) {\n        int left = 0, right = 0, maxLen = 0;\n        HashMap<Character, Integer> charIndex = new HashMap<>();\n\n        while (right < a.length()) {\n            char rightChar = a.charAt(right);\n            charIndex.put(rightChar, charIndex.getOrDefault(rightChar, 0) + 1);\n\n            while (charIndex.get(rightChar) > 1) { // sliding window\n                char leftChar = a.charAt(left);\n                charIndex.put(leftChar, charIndex.getOrDefault(leftChar, 0) - 1);\n                left++;\n            }\n            maxLen = Math.max(maxLen, right - left + 1);\n            right++;\n        }\n\n        return maxLen;\n    }\n\n}\n```"}