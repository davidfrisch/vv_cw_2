
test/_013_RomanToInteger/SolutionTest.java:32: error: Null Dereference
  The call to `int Solution.romanToInt(String)` may trigger the following issue: `i` could be null (from the call to `Solution.romanToInt(...)` on line 32) and is dereferenced in the call to `Solution.romanToInt(...)`. 
  30.       public void Test1() {
  31.           String A = "I";
  32. >         int actual = solution.romanToInt(A);
  33.           int expected = 1;
  34.           assertEquals(expected, actual);

test/_013_RomanToInteger/SolutionTest.java:40: error: Null Dereference
  The call to `int Solution.romanToInt(String)` may trigger the following issue: `i` could be null (from the call to `Solution.romanToInt(...)` on line 40) and is dereferenced in the call to `Solution.romanToInt(...)`. 
  38.       public void Test2() {
  39.           String A = "IV";
  40. >         int actual = solution.romanToInt(A);
  41.           int expected = 4;
  42.           assertEquals(expected, actual);

test/_013_RomanToInteger/SolutionTest.java:48: error: Null Dereference
  The call to `int Solution.romanToInt(String)` may trigger the following issue: `i` could be null (from the call to `Solution.romanToInt(...)` on line 48) and is dereferenced in the call to `Solution.romanToInt(...)`. 
  46.       public void Test3() {
  47.           String A = "IX";
  48. >         int actual = solution.romanToInt(A);
  49.           int expected = 9;
  50.           assertEquals(expected, actual);

test/_013_RomanToInteger/SolutionTest.java:56: error: Null Dereference
  The call to `int Solution.romanToInt(String)` may trigger the following issue: `i` could be null (from the call to `Solution.romanToInt(...)` on line 56) and is dereferenced in the call to `Solution.romanToInt(...)`. 
  54.       public void Test4() {
  55.           String A = "CCVII";
  56. >         int actual = solution.romanToInt(A);
  57.           int expected = 207;
  58.           assertEquals(expected, actual);

test/_013_RomanToInteger/SolutionTest.java:64: error: Null Dereference
  The call to `int Solution.romanToInt(String)` may trigger the following issue: `i` could be null (from the call to `Solution.romanToInt(...)` on line 64) and is dereferenced in the call to `Solution.romanToInt(...)`. 
  62.       public void Test5() {
  63.           String A = "MLXVI";
  64. >         int actual = solution.romanToInt(A);
  65.           int expected = 1066;
  66.           assertEquals(expected, actual);


Found 6 issues (console output truncated to 5, see '/app/leetcode-master/infer-out/report.txt' for the full list)
             Issue Type(ISSUED_TYPE_ID): #
  Null Dereference(NULLPTR_DEREFERENCE): 6
