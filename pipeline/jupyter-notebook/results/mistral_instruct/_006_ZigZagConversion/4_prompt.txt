The following code has the following error: Message: expected:<PA[HNAPLSIIGYIR]> but was:<PA[
 AAY
 YYPALISHIRING]>
@Test
    public void Test1() {
        String A = "PAYPALISHIRING";
        int B = 3;
        String actual = solution.convert(A, B);
        String expected = "PAHNAPLSIIGYIR";
        assertEquals(expected, actual);
    }

Message: expected:<A[CB]D> but was:<A[
 BBC]D>
@Test
    public void Test2() {
        String A = "ABCD";
        int B = 2;
        String actual = solution.convert(A, B);
        String expected = "ACBD";
        assertEquals(expected, actual);
    }


. Retry with a fix of the complete file. Don't explain! Only give the java code

package _006_ZigZagConversion;

/** see test {@link _006_ZigZagConversion.PracticeTest} */
public class Practice {

    public String convert(String text, int numRows) {
        if (numRows <= 0 || text == null || text.isEmpty()) {
            return text;
        }

        int stringLength = text.length();
        int rowSize = (stringLength + numRows - 1) / numRows;

        StringBuilder result = new StringBuilder();

        for (int i = 0; i < numRows; i++) {
            int startIndex = i;
            int endIndex = Math.min(rowSize, i + numRows - 1);
            if (i == numRows - 1) {
                // last row, process remaining characters
                endIndex = stringLength;
            }
            result.append(text.substring(startIndex, endIndex));
            if (i < numRows - 1) {
                int step = i == 0 ? 1 : i;
                result.append(System.lineSeparator());
                for (int j = startIndex + step; j <= endIndex; j += 2 * numRows - 1) {
                    if (j < text.length()) {
                        result.append(" ");
                        result.append(text.charAt(j));
                    }
                }
            }
        }

        return result.toString();
    }

    // Add a new method to print the string in zigzag format for debugging
    public void printZigZag(String text, int numRows) {
        String convertedText = convert(text, numRows);
        System.out.println("Converted Text: " + convertedText);

        for (int i = 0; i < numRows; i++) {
            int startIndex = i;
            int endIndex = Math.min(text.length(), i + numRows - 1);
            if (i == numRows - 1) {
                // last row, process remaining characters
                endIndex = text.length();
            }
            System.out.println("Row " + (i+1) + ": " + text.substring(startIndex, endIndex));
        }
    }
}
