The following code has the following error: 
clean:
   [delete] Deleting directory /app/leetcode-master/bin
   [delete] Deleting directory /app/leetcode-master/report

init:
    [mkdir] Created dir: /app/leetcode-master/bin
    [mkdir] Created dir: /app/leetcode-master/report

compile.specific:
    Compiling 13 source files to /app/leetcode-master/bin
    /app/leetcode-master/src/_012_IntegerToRoman/Practice.java:2: error: class, interface, or enum expected
    private static String intToRoman(int num) {
                   ^
    /app/leetcode-master/src/_012_IntegerToRoman/Practice.java:4: error: class, interface, or enum expected
        int divisor = 1;
        ^
    /app/leetcode-master/src/_012_IntegerToRoman/Practice.java:6: error: class, interface, or enum expected
        int thousands = num / 1000;
        ^
    /app/leetcode-master/src/_012_IntegerToRoman/Practice.java:7: error: class, interface, or enum expected
        num %= 1000;
        ^
    /app/leetcode-master/src/_012_IntegerToRoman/Practice.java:9: error: class, interface, or enum expected
        if (thousands > 0) {
        ^
    /app/leetcode-master/src/_012_IntegerToRoman/Practice.java:11: error: class, interface, or enum expected
            result.append(romanDigits[3]); // Add this line
            ^
    /app/leetcode-master/src/_012_IntegerToRoman/Practice.java:12: error: class, interface, or enum expected
            num += thousands * 1000;
            ^
    /app/leetcode-master/src/_012_IntegerToRoman/Practice.java:13: error: class, interface, or enum expected
            thousands = 0;
            ^
    /app/leetcode-master/src/_012_IntegerToRoman/Practice.java:14: error: class, interface, or enum expected
        }
        ^
    /app/leetcode-master/src/_012_IntegerToRoman/Practice.java:18: error: class, interface, or enum expected
            num %= divisor;
            ^
    /app/leetcode-master/src/_012_IntegerToRoman/Practice.java:20: error: class, interface, or enum expected
            if (quo > 0) {
            ^
    /app/leetcode-master/src/_012_IntegerToRoman/Practice.java:22: error: class, interface, or enum expected
            }
            ^
    /app/leetcode-master/src/_012_IntegerToRoman/Practice.java:25: error: class, interface, or enum expected
        }
        ^
    /app/leetcode-master/src/_012_IntegerToRoman/Practice.java:28: error: class, interface, or enum expected
    }
    ^
    /app/leetcode-master/src/_012_IntegerToRoman/Practice.java:32: error: class, interface, or enum expected
        for (int i = 0; i < count; i++) {
        ^
    /app/leetcode-master/src/_012_IntegerToRoman/Practice.java:32: error: class, interface, or enum expected
        for (int i = 0; i < count; i++) {
                        ^
    /app/leetcode-master/src/_012_IntegerToRoman/Practice.java:32: error: class, interface, or enum expected
        for (int i = 0; i < count; i++) {
                                   ^
    /app/leetcode-master/src/_012_IntegerToRoman/Practice.java:34: error: class, interface, or enum expected
        }
        ^
    /app/leetcode-master/src/_012_IntegerToRoman/Practice.java:36: error: class, interface, or enum expected
    }
    ^
    /app/leetcode-master/src/_012_IntegerToRoman/Practice.java:39: error: class, interface, or enum expected
    private static final String[] romanDigits = {"I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X"};
                         ^
    20 errors
. Retry with a fix of the complete file. Don't explain! Only give the java code

private static String intToRoman(int num) {
    StringBuilder result = new StringBuilder();
    int divisor = 1;

    int thousands = num / 1000;
    num %= 1000;

    if (thousands > 0) {
        result.append(repeat(3, romanDigits[thousands]));
        result.append(romanDigits[3]); // Add this line
        num += thousands * 1000;
        thousands = 0;
    }

    while (num > 0) {
        int quo = num / divisor;
        num %= divisor;

        if (quo > 0) {
            result.append(repeat(quo, romanDigits[divisor]));
        }

        divisor *= 10;
    }

    return result.reverse().toString();
}

private static String repeat(int count, String str) {
    StringBuilder sb = new StringBuilder();
    for (int i = 0; i < count; i++) {
        sb.append(str);
    }
    return sb.toString();
}

// Define the roman digits array here or as a constant
private static final String[] romanDigits = {"I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX", "X"};
