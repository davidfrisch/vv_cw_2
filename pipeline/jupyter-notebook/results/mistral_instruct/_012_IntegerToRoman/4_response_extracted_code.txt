
import java.math.BigDecimal;
import java.math.MathContext;
import java.math.RoundingMode;
import java.util.Arrays;

public class Practice {

    private static final String[] romanDigits = {"I", "V", "X", "L", "XL", "XC", "D", "IX", "IV", "VII"};

    public static void main(String[] args) {
        int number = Integer.parseInt(args[0]);
        System.out.println(intToRoman(number).toUpperCase());
    }

    private static String intToRoman(int num) {
        StringBuilder result = new StringBuilder();
        BigDecimal bd;
        int divisor = 1;

        while (num > 0) {
            bd = BigDecimal.valueOf(num).divide(BigDecimal.valueOf(divisor), new MathContext(2, RoundingMode.DOWN));
            int quo = bd.intValue();
            num -= quo * divisor;

            while (quo > 0) {
                result.append(romanDigits[Math.min(quo % 5, 4 + (quo >= 5 && divisor < 10) * 5)]);
                quo /= 10;
            }

            if (divisor == 10 && num > 0) {
                result.append(romanDigits[num % 10]);
                num = 0;
            }

            divisor *= 10;
        }

        return result.reverse().toString();
    }
}
